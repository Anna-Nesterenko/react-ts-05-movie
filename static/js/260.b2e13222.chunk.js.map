{"version":3,"file":"static/js/260.b2e13222.chunk.js","mappings":"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","sources":["components/ButtonBackTo/ButtonBackTo.tsx","components/Loader/Loader.styled.js","components/Loader/Loader.tsx","pages/MoviesPage/MoviePage.styled.js","pages/MoviesSinglePage/MovieSinglePage.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.tsx","pages/MoviesSinglePage/MoviesSinglePage.tsx","hooks/useFetchMovieById.ts","services/services.ts"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\r\nimport { TiArrowLeftOutline } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nexport const ButtonBackTo = () => {\r\n  const location = useLocation();\r\n  const backLinkHref = location.state?.from ?? '/';\r\n\r\n  return (\r\n    <WrapperBtnBack>\r\n      <LinkStyled to={backLinkHref}>\r\n        <TiArrowLeftOutline /> Back to the Previous page\r\n      </LinkStyled>\r\n    </WrapperBtnBack>\r\n  );\r\n};\r\n\r\nconst WrapperBtnBack = styled.div`\r\n  margin-bottom: 25px;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  text-align: center;\r\n`;\r\n\r\nconst LinkStyled = styled(Link)`\r\n  border-bottom: 4px double black;\r\n  &:hover {\r\n    background-color: #66d0d0;\r\n    border-bottom: 4px double white;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const WrapperLoader = styled.div`\r\n  text-align: center;\r\n`;\r\n","import { RotatingLines } from \"react-loader-spinner\";\r\nimport { WrapperLoader } from \"./Loader.styled\";\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <WrapperLoader>\r\n      <RotatingLines\r\n        strokeColor=\"grey\"\r\n        strokeWidth=\"4\"\r\n        width=\"80\"\r\n        animationDuration=\"1.2\"\r\n      />\r\n    </WrapperLoader>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const WrapperMoviePage = styled.main`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  padding: 20px;\r\n`;\r\n\r\nexport const TextNotInfo = styled.p`\r\n  text-align: center;\r\n  font-size: 18px;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const WrapperList = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  padding-top: 15px;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n`;\r\n\r\nexport const ListEl = styled.li`\r\n  text-align: center;\r\n  margin-top: 10px;\r\n  margin-right: 30px;\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  color: black;\r\n  &:last-child {\r\n    margin-right: 0;\r\n  }\r\n`;\r\n\r\nexport const NavStyled = styled(NavLink)`\r\n  text-decoration: none;\r\n  color: black;\r\n  border-bottom: 3px double black;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  &:hover {\r\n    color: #66d0d0;\r\n    border-bottom: 3px double #66d0d0;\r\n  }\r\n\r\n  &.active {\r\n    color: white;\r\n    border-bottom: 3px double white;\r\n    background-color: #004747;\r\n\r\n    &:hover {\r\n      color: #66d0d0;\r\n      border-bottom: 3px double #66d0d0;\r\n    }\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const WrapperInfoStyled = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  border-bottom: 6px double #004747;\r\n  padding-bottom: 10px;\r\n`;\r\n\r\nexport const WrapperTextInfo = styled.div`\r\n  max-width: 600px;\r\n`;\r\n\r\nexport const ImgStyled = styled.img`\r\n  object-fit: cover;\r\n  height: auto;\r\n  border-radius: 5px;\r\n  max-width: 250px;\r\n  margin-right: 15px;\r\n`;\r\nexport const SingleText = styled.p`\r\n  margin-top: 10px;\r\n`;\r\nexport const SingleTitle = styled.h4`\r\n  margin-top: 10px;\r\n  &:first-child {\r\n    margin-top: 0;\r\n  }\r\n`;\r\nexport const GenresText = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  padding-left: 10px;\r\n`;\r\n","import noPosterImg from \"../../images/imageComingSoon.jpg\";\r\n\r\nimport {\r\n  WrapperInfoStyled,\r\n  ImgStyled,\r\n  WrapperTextInfo,\r\n  SingleTitle,\r\n  SingleText,\r\n  GenresText,\r\n} from \"./MovieCard.styled\";\r\n\r\n// export interface IItems {\r\n//   title: string;\r\n//   poster_path: string;\r\n//   overview: string;\r\n//   genres: any[];\r\n//   vote_average: number;\r\n// }\r\n\r\nexport interface IProps {\r\n  movie: { [key: string]: any };\r\n  genres?: any[];\r\n}\r\n\r\nexport const MovieCard = ({ movie }: IProps) => {\r\n  //   console.log('movie :>> ', movie);\r\n  const precent = Math.ceil(movie.vote_average * 10);\r\n  const { poster_path, title, overview, genres } = movie;\r\n\r\n  return (\r\n    <WrapperInfoStyled>\r\n      {poster_path ? (\r\n        <ImgStyled\r\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\r\n          alt={title}\r\n        />\r\n      ) : (\r\n        <ImgStyled src={noPosterImg} alt={title} />\r\n      )}\r\n      <WrapperTextInfo>\r\n        <SingleTitle>Movie title: {title}</SingleTitle>\r\n        <SingleText>User rating: {precent} % </SingleText>\r\n        <SingleTitle>Overview:</SingleTitle>\r\n        <p>{overview}</p>\r\n        <SingleTitle>\r\n          Genres:\r\n          {genres &&\r\n            genres.map(({ id, name }: any) => (\r\n              <GenresText key={id}>{name} |</GenresText>\r\n            ))}\r\n        </SingleTitle>\r\n      </WrapperTextInfo>\r\n    </WrapperInfoStyled>\r\n  );\r\n};\r\n","import { Outlet, useLocation } from \"react-router-dom\";\r\nimport { MovieCard } from \"../../components/MovieCard/MovieCard\";\r\nimport { Loader } from \"../../components/Loader/Loader\";\r\nimport { useFetchMoviesById } from \"../../hooks/useFetchMovieById\";\r\nimport { ButtonBackTo } from \"../../components/ButtonBackTo/ButtonBackTo\";\r\nimport { NotFoundPage } from \"../NotFoundPage/NotFoundPage\";\r\nimport { WrapperMoviePage } from \"../MoviesPage/MoviePage.styled\";\r\nimport { List, ListEl, NavStyled, WrapperList } from \"./MovieSinglePage\";\r\n\r\nexport const MoviesSinglePage = () => {\r\n  const { movies, error, loading, movieId } = useFetchMoviesById();\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <WrapperMoviePage>\r\n      <>\r\n        {!error && (\r\n          <>\r\n            <ButtonBackTo />\r\n            {loading && <Loader />}\r\n            <MovieCard movie={movies} />\r\n          </>\r\n        )}\r\n      </>\r\n      <>\r\n        {!error ? (\r\n          <List>\r\n            Additional Information:\r\n            <WrapperList>\r\n              <ListEl>\r\n                <NavStyled\r\n                  to={`/movies/${movieId}/cast`}\r\n                  state={{ from: location?.state?.from }}\r\n                >\r\n                  Cast\r\n                </NavStyled>\r\n              </ListEl>\r\n              <ListEl>\r\n                <NavStyled\r\n                  to={`/movies/${movieId}/reviews`}\r\n                  state={{ from: location?.state?.from }}\r\n                >\r\n                  Reviews\r\n                </NavStyled>\r\n              </ListEl>\r\n            </WrapperList>\r\n          </List>\r\n        ) : (\r\n          <NotFoundPage />\r\n        )}\r\n      </>\r\n      <Outlet />\r\n    </WrapperMoviePage>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getMovieDetailsById } from \"../services/services\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport const useFetchMoviesById = () => {\r\n  const { movieId } = useParams();\r\n\r\n  const [movies, setMovies] = useState<{ [key: string]: any }>([]);\r\n  const [error, setError] = useState<any | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    const fetchMoviesById = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const data = await getMovieDetailsById(movieId);\r\n\r\n        setMovies(data);\r\n      } catch (error) {\r\n        setError(error);\r\n        //   error('Page is not found');\r\n        //   toast.error(`Not Found`);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMoviesById();\r\n  }, [movieId]);\r\n  return { movies, loading, error, movieId };\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst API_KEY = \"833791a5e754a1f0443be5fc62646bdb\";\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\r\n\r\nexport const getTrendingMovies = async () => {\r\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\r\n  return data;\r\n};\r\n\r\nexport const getSearchMovies = async (searchQuery: string) => {\r\n  const { data } = await axios.get(\r\n    `search/movie?api_key=${API_KEY}&query=${searchQuery}&include_adult=false`\r\n  );\r\n  return data;\r\n};\r\n\r\nexport const getMovieDetailsById = async (id: string | undefined) => {\r\n  const { data } = await axios.get(`movie/${id}?api_key=${API_KEY}`);\r\n  return data;\r\n};\r\n\r\nexport const getMovieByCast = async (id: string | undefined) => {\r\n  const { data } = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\r\n  return data;\r\n};\r\n\r\nexport const getMovieByReviews = async (id: string | undefined) => {\r\n  const { data } = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\r\n  return data;\r\n};\r\n"],"names":["ButtonBackTo","backLinkHref","useLocation","state","from","WrapperBtnBack","LinkStyled","to","styled","Link","WrapperLoader","Loader","strokeColor","strokeWidth","width","animationDuration","WrapperMoviePage","TextNotInfo","WrapperList","List","ListEl","NavStyled","NavLink","WrapperInfoStyled","WrapperTextInfo","ImgStyled","SingleText","SingleTitle","GenresText","MovieCard","movie","precent","Math","ceil","vote_average","poster_path","title","overview","genres","src","alt","noPosterImg","map","id","name","MoviesSinglePage","movieId","useParams","useState","movies","setMovies","error","setError","loading","setLoading","useEffect","fetchMoviesById","getMovieDetailsById","data","useFetchMoviesById","location","NotFoundPage","API_KEY","axios","getTrendingMovies","getSearchMovies","searchQuery","getMovieByCast","getMovieByReviews"],"sourceRoot":""}