{"version":3,"file":"static/js/524.c79a2665.chunk.js","mappings":"kKAEaA,E,QAAgBC,GAAAA,IAAH,+C,SCCbC,EAAS,WACpB,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CACEG,YAAY,OACZC,YAAY,IACZC,MAAM,KACNC,kBAAkB,SAIzB,C,wOCXYC,EAAcN,EAAAA,GAAAA,KAAH,6EAKXO,EAAYP,EAAAA,GAAAA,GAAH,gHAOTQ,EAAOR,EAAAA,GAAAA,GAAH,yUAYJS,EAAST,EAAAA,GAAAA,GAAH,sKAUNU,GAAaV,EAAAA,EAAAA,IAAOW,EAAAA,GAAPX,CAAH,+C,sJC1BVY,EAAW,WACtB,MCT4B,WAC5B,OAA4BC,EAAAA,EAAAA,UAAsC,IAAlE,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAkB,GAAhD,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAqB,MAA/C,eAAOK,EAAP,KAAcC,EAAd,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,yCAAG,gGAClBJ,GAAW,GADO,mBAGGK,EAAAA,EAAAA,MAHH,OAGVC,EAHU,OAIhBR,EAAUQ,EAAKC,SAJC,gDAMhBL,EAAS,EAAD,IANQ,yBAQhBF,GAAW,GARK,4EAAH,qDAYjBI,GACD,GAAE,IAEI,CAAEP,OAAAA,EAAQE,QAAAA,EAASE,MAAAA,EAC3B,CDb6BO,GAApBX,EAAR,EAAQA,OAAQE,EAAhB,EAAgBA,QAEhB,OACE,UAAC,EAAAV,YAAD,YACE,SAAC,EAAAC,UAAD,8BACA,UAAC,EAAAC,KAAD,WACGQ,IAAW,SAACf,EAAA,EAAD,IACXa,EAAOY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,SAAC,EAAAnB,OAAD,WACE,SAAC,EAAAC,WAAD,CAAYmB,GAAE,kBAAaF,GAA3B,SAAkCC,KADvBD,EADH,SAQnB,C,mMEzBKG,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,gCAElB,IAAMT,EAAiB,yCAAG,2GACRS,IAAAA,IAAA,qCAAwCD,IADhC,uBACvBP,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBS,EAAe,yCAAG,WAAOC,GAAP,8FACNF,IAAAA,IAAA,+BACGD,EADH,kBACoBG,EADpB,yBADM,uBACrBV,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfW,EAAmB,yCAAG,WAAOP,GAAP,8FACVI,IAAAA,IAAA,gBAAmBJ,EAAnB,oBAAiCG,IADvB,uBACzBP,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,sDAKnBY,EAAc,yCAAG,WAAOR,GAAP,8FACLI,IAAAA,IAAA,gBAAmBJ,EAAnB,4BAAyCG,IADpC,uBACpBP,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKda,EAAiB,yCAAG,WAAOT,GAAP,8FACRI,IAAAA,IAAA,gBAAmBJ,EAAnB,4BAAyCG,IADjC,uBACvBP,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qD","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.tsx","pages/HomePage/HomePage.styled.js","pages/HomePage/HomePage.tsx","hooks/useFetchMovies.ts","services/services.ts"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const WrapperLoader = styled.div`\r\n  text-align: center;\r\n`;\r\n","import { RotatingLines } from \"react-loader-spinner\";\r\nimport { WrapperLoader } from \"./Loader.styled\";\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <WrapperLoader>\r\n      <RotatingLines\r\n        strokeColor=\"grey\"\r\n        strokeWidth=\"4\"\r\n        width=\"80\"\r\n        animationDuration=\"1.2\"\r\n      />\r\n    </WrapperLoader>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const WrapperMain = styled.main`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  padding: 20px;\r\n`;\r\nexport const HomeTitle = styled.h2`\r\n  font-size: 22px;\r\n  font-weight: 700;\r\n  text-align: center;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  max-width: 500px;\r\n  padding: 15px;\r\n  border-left: 4px double white;\r\n  border-right: 4px double white;\r\n  background: linear-gradient(to top right, #ccefef, #008e8e);\r\n  margin: 0 auto;\r\n  text-align: start;\r\n  box-shadow: 0 0 10px #66d0d0, 0 0 40px #66d0d0, 0 0 60px #66d0d0,\r\n    0 0 80px #66d0d0;\r\n`;\r\n\r\nexport const ListEl = styled.li`\r\n  font-size: 18px;\r\n  padding-left: 10px;\r\n  padding-bottom: 2px;\r\n  padding-top: 2px;\r\n  color: black;\r\n  &:hover {\r\n    color: white;\r\n  }\r\n`;\r\nexport const LinkStyled = styled(Link)`\r\n  padding-right: 60px;\r\n`;\r\n","import { Loader } from '../../components/Loader/Loader';\r\nimport { useFetchMovies } from '../../hooks/useFetchMovies';\r\n\r\nimport {\r\n  WrapperMain,\r\n  HomeTitle,\r\n  List,\r\n  ListEl,\r\n  LinkStyled,\r\n} from './HomePage.styled';\r\n\r\nexport const HomePage = () => {\r\n  const { movies, loading } = useFetchMovies();\r\n\r\n  return (\r\n    <WrapperMain>\r\n      <HomeTitle>Tranding today</HomeTitle>\r\n      <List>\r\n        {loading && <Loader />}\r\n        {movies.map(({ id, title }) => (\r\n          <ListEl key={id}>\r\n            <LinkStyled to={`/movies/${id}`}>{title}</LinkStyled>\r\n          </ListEl>\r\n        ))}\r\n      </List>\r\n    </WrapperMain>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getTrendingMovies } from \"../services/services\";\r\n\r\nexport const useFetchMovies = () => {\r\n  const [movies, setMovies] = useState<{ [key: string]: string }[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<any | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const data = await getTrendingMovies();\r\n        setMovies(data.results);\r\n      } catch (error) {\r\n        setError(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  return { movies, loading, error };\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst API_KEY = \"833791a5e754a1f0443be5fc62646bdb\";\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\r\n\r\nexport const getTrendingMovies = async () => {\r\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\r\n  return data;\r\n};\r\n\r\nexport const getSearchMovies = async (searchQuery: string) => {\r\n  const { data } = await axios.get(\r\n    `search/movie?api_key=${API_KEY}&query=${searchQuery}&include_adult=false`\r\n  );\r\n  return data;\r\n};\r\n\r\nexport const getMovieDetailsById = async (id: string | undefined) => {\r\n  const { data } = await axios.get(`movie/${id}?api_key=${API_KEY}`);\r\n  return data;\r\n};\r\n\r\nexport const getMovieByCast = async (id: string | undefined) => {\r\n  const { data } = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\r\n  return data;\r\n};\r\n\r\nexport const getMovieByReviews = async (id: string | undefined) => {\r\n  const { data } = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\r\n  return data;\r\n};\r\n"],"names":["WrapperLoader","styled","Loader","strokeColor","strokeWidth","width","animationDuration","WrapperMain","HomeTitle","List","ListEl","LinkStyled","Link","HomePage","useState","movies","setMovies","loading","setLoading","error","setError","useEffect","fetchMovies","getTrendingMovies","data","results","useFetchMovies","map","id","title","to","API_KEY","axios","getSearchMovies","searchQuery","getMovieDetailsById","getMovieByCast","getMovieByReviews"],"sourceRoot":""}